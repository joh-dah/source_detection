data_creation:
  small_input: true
  training_size: 1000
  validation_size: 200
  propagations_per_real_world_graph: 100
  relative_n_sources: [0.005, 0.05]  # share of sources on the number of nodes
  relative_infected: [0.2, 0.5]  # share of infected nodes on the number of nodes, determines when to stop the propagation
  n_nodes: [500, 5000]  # number of nodes in the graph
  watts_strogatz_neighbours: [0.1, 2.0]  # watts strogatz neighbors property, 0.5 of it is used for barabasi albert neighbors property
  watts_strogatz_probability: [0.1, 0.4]  # watts strogatz reconnect property
  beta: [0.001, 0.005]  # beta property of the SI model
  root_seed_training: 0x8C3C010CB4754C905776BDA35EE7501
  root_seed_validation: 0x8C3C010CB4754C905776BDA35EE7502
model: GCNR
model_name:   # The name of the trained model, if None, it will be auto-generated based on the current time
on_cluster: false
training:
  alpha: 0.5
  batch_size: 10
  epochs: 100
  hidden_size: 512
  layers: 10
  learning_rate: 0.000001
  subsample: true  # Whether to perform subsampling of the majority class during training
  useLogLoss: true  # Whether to use logarithmic loss (MSLELoss) for the GCNR model
  class_weighting: false  # Whether to weight classes according to their presents in the data, to avoid the need of undersampling
  graph_weighting: false  # Whether to generate node weights so that each graph has the same influence on the loss regardless its size
  weight_decay: 1.0e-08
datasets:
  validation:  # List of datasets to be used for validation
  - synthetic
  - karate
  - airports
  - facebook
  - wiki
  - actor
  visualization:
  - karate
visualization:
  seed: 123